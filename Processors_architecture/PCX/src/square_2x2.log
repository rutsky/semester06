Loaded `../data/square_2x2.pcx' file.
29824 bytes length.
PCX image header info:
  Manufacturer:     10
  Version:          5
  Encoding:         1
  Bits per pixel:   8
  Window:           from (0,0) to (511,511)
  Resolution (dpi): (300,300)
  Planes:           3
  Bytes per line:   512
  Pallete type:     1
  Screen size:      (0,0)
Starting 10 runs by 100 calls...
Average result based on 10 runs by 100 calls.
Implementation: general
10 * 100 calls in 4.445     seconds (min=0.436     max=0.469     avg=0.4445    seconds per 100 calls)

Implementation: # 1  w/o iostream
10 * 100 calls in 4.42      seconds (min=0.436     max=0.45      avg=0.442     seconds per 100 calls)

Implementation: # 2  constants inlined
10 * 100 calls in 4.436     seconds (min=0.434     max=0.451     avg=0.4436    seconds per 100 calls)

Implementation: # 3  using `int' type
10 * 100 calls in 3.68      seconds (min=0.359     max=0.397     avg=0.368     seconds per 100 calls)

Implementation: # 4  deduced output image addressing
10 * 100 calls in 1.535     seconds (min=0.148     max=0.18      avg=0.1535    seconds per 100 calls)

Implementation: # 5  deduced input data addressing
10 * 100 calls in 1.415     seconds (min=0.137     max=0.148     avg=0.1415    seconds per 100 calls)

Implementation: # 6  reimplemented cycle
10 * 100 calls in 1.397     seconds (min=0.136     max=0.147     avg=0.1397    seconds per 100 calls)

Implementation: # 7  inlined outputting
10 * 100 calls in 1.467     seconds (min=0.137     max=0.194     avg=0.1467    seconds per 100 calls)

Implementation: # 8  inlined outputting in all cases
10 * 100 calls in 1.407     seconds (min=0.136     max=0.146     avg=0.1407    seconds per 100 calls)

Implementation: # 9  pairing in output
10 * 100 calls in 0.908     seconds (min=0.088     max=0.099     avg=0.0908    seconds per 100 calls)

Implementation: # 9a using memset() for output
10 * 100 calls in 0.893     seconds (min=0.087     max=0.094     avg=0.0893    seconds per 100 calls)

Implementation: #10  I/O by DWORD
10 * 100 calls in 0.915     seconds (min=0.089     max=0.096     avg=0.0915    seconds per 100 calls)

Implementation: #11  I/O by paired 2 DWORDs
10 * 100 calls in 0.927     seconds (min=0.09      max=0.099     avg=0.0927    seconds per 100 calls)

Implementation: #11a I/O by blindly paired 2 DWORDs
10 * 100 calls in 0.947     seconds (min=0.092     max=0.101     avg=0.0947    seconds per 100 calls)

Implementation: #11b I/O by blindly paired 4 DWORDs
10 * 100 calls in 0.922     seconds (min=0.09      max=0.096     avg=0.0922    seconds per 100 calls)

Implementation: #12  reading aligned by 4 bytes
10 * 100 calls in 0.965     seconds (min=0.093     max=0.102     avg=0.0965    seconds per 100 calls)

Implementation: #13  I/O by blindly paired 2 DWORDs using MMX
10 * 100 calls in 0.931     seconds (min=0.091     max=0.096     avg=0.0931    seconds per 100 calls)

Implementation: #13a I/O by blindly paired 2 DWORDs using MMX (only copying with MMX)
10 * 100 calls in 1.015     seconds (min=0.09      max=0.181     avg=0.1015    seconds per 100 calls)

Implementation: 14   I/O by blindly paired 2 DWORDs using MMX + output using SSE
10 * 100 calls in 0.93      seconds (min=0.086     max=0.131     avg=0.093     seconds per 100 calls)

Implementation: 15   Only using SSE for output
10 * 100 calls in 0.901     seconds (min=0.086     max=0.096     avg=0.0901    seconds per 100 calls)

