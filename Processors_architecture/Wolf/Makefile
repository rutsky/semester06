### Generated by Winemaker


SRCDIR                = .
SUBDIRS               =
DLLS                  =
EXES                  = wolf



### Common settings

CEXTRA                = -mno-cygwin
CXXEXTRA              = -mno-cygwin
RCEXTRA               =
INCLUDE_PATH          =
DLL_PATH              =
LIBRARY_PATH          =
LIBRARIES             =


### wolf sources and settings

wolf_MODULE           = wolf
wolf_C_SRCS           = Src/TaCamera.c \
			Src/TaMain.c \
			Src/TaScene.c \
			Src/TaTextur.c \
			Src/TaWorld.c
wolf_CXX_SRCS         =
wolf_RC_SRCS          = Src/TaRes.rc
wolf_LDFLAGS          = -mwindows \
			-mno-cygwin
wolf_DLL_PATH         =
wolf_DLLS             = odbc32 \
			ole32 \
			oleaut32 \
			winspool
wolf_LIBRARY_PATH     =
wolf_LIBRARIES        = uuid

wolf_OBJS             = $(wolf_C_SRCS:.c=.o) \
			$(wolf_CXX_SRCS:.cpp=.o) \
			$(wolf_RC_SRCS:.rc=.res)



### Global source lists

C_SRCS                = $(wolf_C_SRCS)
CXX_SRCS              = $(wolf_CXX_SRCS)
RC_SRCS               = $(wolf_RC_SRCS)


### Tools

CC = winegcc
CXX = wineg++
RC = wrc


### Generic targets

all: $(SUBDIRS) $(DLLS:%=%.so) $(EXES:%=%.so)

### Build rules

.PHONY: all clean dummy

$(SUBDIRS): dummy
	@cd $@ && $(MAKE)

# Implicit rules

.SUFFIXES: .cpp .rc .res
DEFINCL = $(INCLUDE_PATH) $(DEFINES) $(OPTIONS)

.c.o:
	$(CC) -c $(CFLAGS) $(CEXTRA) $(DEFINCL) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.rc.res:
	$(RC) $(RCFLAGS) $(RCEXTRA) $(DEFINCL) -fo$@ $<

# Rules for cleaning

CLEAN_FILES     = y.tab.c y.tab.h lex.yy.c core *.orig *.rej \
                  \\\#*\\\# *~ *% .\\\#*

clean:: $(SUBDIRS:%=%/__clean__) $(EXTRASUBDIRS:%=%/__clean__)
	$(RM) $(CLEAN_FILES) $(RC_SRCS:.rc=.res) $(C_SRCS:.c=.o) $(CXX_SRCS:.cpp=.o)
	$(RM) $(DLLS:%=%.so) $(EXES:%=%.so) $(EXES:%.exe=%)

$(SUBDIRS:%=%/__clean__): dummy
	cd `dirname $@` && $(MAKE) clean

$(EXTRASUBDIRS:%=%/__clean__): dummy
	-cd `dirname $@` && $(RM) $(CLEAN_FILES)

### Target specific build rules
DEFLIB = $(LIBRARY_PATH) $(LIBRARIES) $(DLL_PATH)

$(wolf_MODULE).so: $(wolf_OBJS)
	$(CC) $(wolf_LDFLAGS) -o $@ $(wolf_OBJS) $(wolf_LIBRARY_PATH) $(DEFLIB) $(wolf_DLLS:%=-l%) $(wolf_LIBRARIES:%=-l%)


